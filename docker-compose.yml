services:
  frontend:
    build:
      context: ../portfolio-gatsby
      dockerfile: Dockerfile
    env_file: ../portfolio-gatsby/.env
    environment:
      - STRAPI_API_URL=http://strapi:1337
    ports:
      - "8000:8000"
    volumes:
      - ../portfolio-gatsby:/app
      - /app/node_modules
    depends_on:
      strapi:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - strapi

  strapi:
    container_name: strapi
    build:
      context: .
      dockerfile: Dockerfile
    env_file: .env
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: strapiDB
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      APP_KEYS: ${APP_KEYS}
      NODE_ENV: ${NODE_ENV}
    volumes:
      - /opt/app/node_modules
      - .:/opt/app
    ports:
      - "1337:1337"
    networks:
      - strapi
    depends_on:
      - strapiDB
    restart: unless-stopped
    healthcheck:
      test: "wget --no-verbose --tries=1 --spider http://strapi:1337/admin || exit 1"
      interval: 30s
      timeout: 10s
      retries: 5

  strapiDB:
    container_name: strapiDB
    platform: linux/amd64 #for platform error on Apple M1 chips
    # restart: unless-stopped
    env_file: .env
    image: postgres:16
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - strapi-data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    networks:
      - strapi

volumes:
  strapi-data:

networks:
  strapi:
    name: Strapi
    driver: bridge
